<<<<<<< HEAD
// Next.js API route support:
// https://nextjs.org/docs/api-routes/introduction
=======
>>>>>>> undo_rebase
import type { NextApiRequest, NextApiResponse } from 'next';
const constants = require('gocardless-nodejs/constants');
const gocardless = require('gocardless-nodejs');
const client = gocardless(
  process.env.GO_CARDLESS_ACCESS_TOKEN,
  constants.Environments.Sandbox,
);

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse,
) {
<<<<<<< HEAD
  try {
    // create a billing request returns a request id
    const { id } = await client.billingRequests.create({
      mandate_request: {
        scheme: 'bacs',
      },
    });

    const billingRequestFlow = await client.billingRequestFlows.create({
      redirect_uri: 'https://my-company.com/landing',
      exit_uri: 'https://my-company.com/exit',
      prefilled_customer: {
        given_name: 'Frank',
        family_name: 'Osborne',
        email: 'frank.osborne@acmeplc.com',
      },
      links: {
        billing_request: id,
      },
    });
    res.status(200).json(billingRequestFlow);
  } catch (e) {
    // @ts-ignore
    res.status(200).json(e.message);
  }
=======
  // reject non post requests
  if (req.method !== 'POST') {
    res.status(401).json('Unsupported method');
    return;
  }


     res.status(200).json('Hello from gc flow');


//   const { firstName, lastName, address, city, county, postCode, email } =
//     req.body.data;
//   try {
//     // create a billing request returns a request id string
//     const { id } = await client.billingRequests.create({
//       mandate_request: {
//         scheme: 'bacs',
//       },
//     });
// // add prefilled  customer detail to the direct debit form  
//     const billingRequestFlow = await client.billingRequestFlows.create({
//       //TODO add hashed email to url
//       redirect_uri: 'https://my-company.com/landing',
//       exit_uri: 'https://my-company.com/exit',
//       prefilled_customer: {
//         given_name: firstName,
//         family_name: lastName,
//         address_line1: address,
//         city: city,
//         region: county,
//         postal_code: postCode,
//         email: email,
//       },
// 	  //  id generated by the GC aip
//       links: {
//         billing_request: id,
//       },
//     });
//     console.log(billingRequestFlow);
//     res.status(200).json(billingRequestFlow);
//   } catch (err: any) {
//     res.status(200).json(err.message);
//   }
>>>>>>> undo_rebase
}
